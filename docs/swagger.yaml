definitions:
  controller.ApiResponse:
    properties:
      ResultCode:
        example: "200"
        type: string
      ResultMessage:
        type: object
    type: object
  controller.Todo:
    properties:
      Item:
        example: test
        type: string
      ItemID:
        example: 0
        type: integer
      State:
        type: string
      UserID:
        example: User-1
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Doubleshun
    url: https://github.com/doubleshun
  description: just test golang and swagger for fun
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: testProject API.
  version: "0.1"
paths:
  /api/todo:
    patch:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.ApiResponse'
            type: array
      summary: Update todo from List
      tags:
      - Todo
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.ApiResponse'
            type: array
      summary: Add todo to List
      tags:
      - Todo
  /api/todo/{UserID}:
    get:
      consumes:
      - application/json
      parameters:
      - description: UserId
        in: path
        name: UserID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.ApiResponse'
            type: array
      summary: Get all todo from List
      tags:
      - Todo
  /api/todo/{UserID}/{ItemID}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: UserId
        in: path
        name: UserID
        required: true
        type: string
      - description: ItemId
        in: path
        name: ItemID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete todo from List
      tags:
      - Todo
swagger: "2.0"
